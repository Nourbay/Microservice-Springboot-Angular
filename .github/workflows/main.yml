name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gestion-match
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and test
        run: mvn clean verify

      - name: List target directory
        run: ls -l target

  sonar:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./gestion-match
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Compile classes for Sonar
        run: mvn compile

      - name: SonarCloud analysis
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=Nourbay_Microservice-Springboot-Angular \
            -Dsonar.organization=nourbayoudh \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-nexus:
    runs-on: ubuntu-latest
    needs: sonar
    defaults:
      run:
        working-directory: ./gestion-match
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Package jar for Docker
        run: mvn clean package

      - name: List target directory
        run: ls -l target

      - name: üê≥ Login to Nexus Docker Registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login bd2d-196-234-9-161.ngrok-free.app --username ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t bd2d-196-234-9-161.ngrok-free.app/repository/docker-back/gestion-match:latest .

      - name: Push Docker image
        run: docker push bd2d-196-234-9-161.ngrok-free.app/repository/docker-back/gestion-match:latest

  docker-hub:
    runs-on: ubuntu-latest
    needs: docker-nexus
    defaults:
      run:
        working-directory: ./gestion-match
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Package jar for Docker
        run: mvn clean package

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-match:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/gestion-match:latest


